manifest {

	name = 'mPCRselect'
	author = 'Ellie E. Armstrong, Julie Li, Katherine A. Solari, Jazlyn A. Mooney, Michael G. Campana'
	homePage = 'https://github.com/ellieearmstrong/mPCRselect'
	description = 'Pipeline to select SNPs for mPCR'
	mainScript = 'mPCRselect.nf'
	version = '0.3.0'
	nextflowVersion = '>=23.10.0'

}

params {

	outdir = "$launchDir/mPCR_results" // Output directory
	vcf = "$launchDir/RawData/tiger.vcf.gz" // Input VCF (gzipped)
	samples = "NULL" // List of samples to remove. Set to "NULL" to bypass filter.
	map_bed = "$launchDir/RawData/PanTig-genmap1.0.chromrename.bed" // BED file of low mappability regions to exclude.  Set to "NULL" to bypass filter.
	chr_file = "$launchDir/RawData/tiger_chromosomes.txt" // List of chromosomes to retain. Set to "NULL" to bypass filter.
	populations = "$launchDir/RawData/tiger_pop.csv" // CSV assigning samples to subspecies or populations
	refseq = "$launchDir/RawData/PanTig1.0-chrrename.fa" // Reference sequence in FASTA
	
	minGQ = 20 // Minimum GQ filter.  Set to "NULL" to bypass filter.
	indvMissing = 0.50 // Maximum individual missingness. Set to "NULL" to bypass filter.
	cull = 40 // Distance to cull SNPs in bp (remove both SNPs). Set to "NULL" to bypass filter.
	siteMissing = 0.8 // Maximum site missingness (as specified in VCFtools). Set to 0 to ignore site-missingness.
	thin = 100000 // Distance to randomly thin for LD avoidance. Set to "NULL" to bypass filter.
	
	plinkLD_indep_pairwise = '500kb 0.2' // Parameter string for PLINK2 LD -indep-pairwise. Set to "NULL" to ignore PLINK LD-filter.
	minMAF = 0.05 // Minimum MAF for PLINK2 LD filter.
	haploidN = 18 // Number of haploid chromosomes for PLINK

	maxPiSNPs = 1000 // Maximum number of highest pi SNPs to retain
	minPi = 0.1 // Minimum site-pi for retention
	maxPiPC = 0.1 // Maximum proportion of pi SNPs to retain
	
	maxFstSNPs = 1000 // Maximum number of Fst SNPs to retain
	minFst = 0.1 // Minimum site Fst for retention using VCFtools
	maxFstPC = 0.1 // Maximum proportion of Fst SNPs to retain using VCFtools
	
	Fst_plot_repet = 20 // Number of repeats per population combination for Fst plots
	Dcontrol = 20 // Number of control replicates for Fst plots
	FstIndResamples = 20 // Number of individuals to resample to for Fst plots
	MaxFstEval = 1000 // Maximum number of SNPs to evaluate
	FstSNPInterval = 50 // Interval at which to plot evaluated SNPs
	
	makePrimers = 0 // Make mPCR primers (O = no, 1 = yes)
	primerSeq1 = 'TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG' // NGS-PrimerPlex adapter construct for NGS
	primerSeq2 = 'GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG' // NGS-PrimerPlex adapter construct for NGS
	NPP_params = '-minampllen 26 -optampllen 50 -maxampllen 120 -maxprimerlen 26 -minprimerlen 18 -blast -skip -primernum1 25 -tries 500' // Parameters for NGS-PrimerPlex
	
	makeBaits = 0 // Make baits using BaitsTools vcf2baits (0 = no, 1 = yes)
	baitsparams = '-w -c -N -n -x -J -y -l -B' // String of additional parameters to feed to BaitsTools vcf2baits
	
}

conda.enabled = true
conda.useMamba = true

profiles {
	standard {
		process {
			executor = 'local'
			errorStrategy = 'finish'
			conda = 'bioconda::bwa=0.7.17 conda-forge::libzlib=1.2.13 conda-forge::ruby=3.2.2 bioconda::vcftools=0.1.16 conda-forge::gzip conda-forge::gawk bioconda::bcftools=1.18 conda-forge::gsl=2.7 bioconda::plink2 r::r-tidyverse=1.3.1 conda-forge::r-caret conda-forge::r-ggplot2'
		}
	}
}